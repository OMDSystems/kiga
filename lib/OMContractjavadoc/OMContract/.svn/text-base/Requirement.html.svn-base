<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_18) on Tue Mar 15 16:52:33 CET 2011 -->
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<TITLE>
Requirement
</TITLE>

<META NAME="date" CONTENT="2011-03-15">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Requirement";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../OMContract/package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/Requirement.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../OMContract/PreconditionFailedException.html" title="class in OMContract"><B>PREV CLASS</B></A>&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?OMContract/Requirement.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="Requirement.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
OMContract</FONT>
<BR>
Class Requirement</H2>
<PRE>
java.lang.Object
  <IMG SRC="../resources/inherit.gif" ALT="extended by "><B>OMContract.Requirement</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>Requirement</B><DT>extends java.lang.Object</DL>
</PRE>

<P>
A requirement checks all defined preconditions, postconditions and invariants,
 throwing exceptions if they fail.
<P>

<P>
<HR>

<P>

<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../OMContract/Requirement.html" title="class in OMContract">Requirement</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../OMContract/Requirement.html#areEqual(java.lang.Object, java.lang.Object)">areEqual</A></B>(java.lang.Object&nbsp;expected,
         java.lang.Object&nbsp;given)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Checking if two objects are equal using <code>equals(Object obj)</code></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../OMContract/Requirement.html" title="class in OMContract">Requirement</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../OMContract/Requirement.html#errorMessage(java.lang.String)">errorMessage</A></B>(java.lang.String&nbsp;errorMessage)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defines errorMessage for all upcoming check definitions until next
 error message is defined or a new <code>precondition()</code>,
 <code>postcondition()</code> or <code>invariant()</code> is called.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../OMContract/Requirement.html" title="class in OMContract">Requirement</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../OMContract/Requirement.html#invariant()">invariant</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defining an invariant</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../OMContract/Requirement.html" title="class in OMContract">Requirement</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../OMContract/Requirement.html#isFalse(boolean)">isFalse</A></B>(boolean&nbsp;expression)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Checking if a given boolean expression evaluates to <code>false</code>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T extends java.lang.Comparable&gt; 
<BR>
<A HREF="../OMContract/Requirement.html" title="class in OMContract">Requirement</A></CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../OMContract/Requirement.html#isInExclusiveRange(T, T, T)">isInExclusiveRange</A></B>(T&nbsp;minimum,
                   T&nbsp;maximum,
                   T&nbsp;given)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Checking if the given Object is in exclusive Range between minimum and maximum</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" SUMMARY="">
<TR ALIGN="right" VALIGN="">
<TD NOWRAP><FONT SIZE="-1">
<CODE>&lt;T extends java.lang.Comparable&gt; 
<BR>
<A HREF="../OMContract/Requirement.html" title="class in OMContract">Requirement</A></CODE></FONT></TD>
</TR>
</TABLE>
</CODE></FONT></TD>
<TD><CODE><B><A HREF="../OMContract/Requirement.html#isInInclusiveRange(T, T, T)">isInInclusiveRange</A></B>(T&nbsp;minimum,
                   T&nbsp;maximum,
                   T&nbsp;given)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Checking if the given Object is in inclusive Range between minimum and maximum</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../OMContract/Requirement.html#isNotNull(java.lang.Object)">isNotNull</A></B>(java.lang.Object&nbsp;obj)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cheking if the given Object is <code>null</code></TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../OMContract/Requirement.html" title="class in OMContract">Requirement</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../OMContract/Requirement.html#isTrue(boolean)">isTrue</A></B>(boolean&nbsp;expression)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Checking if a given boolean expression evaluates to <code>true</code>.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../OMContract/Requirement.html" title="class in OMContract">Requirement</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../OMContract/Requirement.html#postcondition()">postcondition</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defining a postcondition</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../OMContract/Requirement.html" title="class in OMContract">Requirement</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../OMContract/Requirement.html#precondition()">precondition</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Defining a precondition</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="precondition()"><!-- --></A><H3>
precondition</H3>
<PRE>
public <A HREF="../OMContract/Requirement.html" title="class in OMContract">Requirement</A> <B>precondition</B>()</PRE>
<DL>
<DD>Defining a precondition
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="postcondition()"><!-- --></A><H3>
postcondition</H3>
<PRE>
public <A HREF="../OMContract/Requirement.html" title="class in OMContract">Requirement</A> <B>postcondition</B>()</PRE>
<DL>
<DD>Defining a postcondition
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="invariant()"><!-- --></A><H3>
invariant</H3>
<PRE>
public <A HREF="../OMContract/Requirement.html" title="class in OMContract">Requirement</A> <B>invariant</B>()</PRE>
<DL>
<DD>Defining an invariant
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="errorMessage(java.lang.String)"><!-- --></A><H3>
errorMessage</H3>
<PRE>
public <A HREF="../OMContract/Requirement.html" title="class in OMContract">Requirement</A> <B>errorMessage</B>(java.lang.String&nbsp;errorMessage)</PRE>
<DL>
<DD>Defines errorMessage for all upcoming check definitions until next
 error message is defined or a new <code>precondition()</code>,
 <code>postcondition()</code> or <code>invariant()</code> is called.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>errorMessage</CODE> - Your error message</DL>
</DD>
</DL>
<HR>

<A NAME="isTrue(boolean)"><!-- --></A><H3>
isTrue</H3>
<PRE>
public <A HREF="../OMContract/Requirement.html" title="class in OMContract">Requirement</A> <B>isTrue</B>(boolean&nbsp;expression)
                   throws <A HREF="../OMContract/ContractException.html" title="class in OMContract">ContractException</A></PRE>
<DL>
<DD>Checking if a given boolean expression evaluates to <code>true</code>.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>expression</CODE> - boolean expression
<DT><B>Throws:</B>
<DD><CODE><A HREF="../OMContract/ContractException.html" title="class in OMContract">ContractException</A></CODE> - if expression is false</DL>
</DD>
</DL>
<HR>

<A NAME="isFalse(boolean)"><!-- --></A><H3>
isFalse</H3>
<PRE>
public <A HREF="../OMContract/Requirement.html" title="class in OMContract">Requirement</A> <B>isFalse</B>(boolean&nbsp;expression)
                    throws <A HREF="../OMContract/ContractException.html" title="class in OMContract">ContractException</A></PRE>
<DL>
<DD>Checking if a given boolean expression evaluates to <code>false</code>.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>expression</CODE> - boolean expression
<DT><B>Throws:</B>
<DD><CODE><A HREF="../OMContract/ContractException.html" title="class in OMContract">ContractException</A></CODE> - if expression is true</DL>
</DD>
</DL>
<HR>

<A NAME="areEqual(java.lang.Object, java.lang.Object)"><!-- --></A><H3>
areEqual</H3>
<PRE>
public <A HREF="../OMContract/Requirement.html" title="class in OMContract">Requirement</A> <B>areEqual</B>(java.lang.Object&nbsp;expected,
                            java.lang.Object&nbsp;given)
                     throws <A HREF="../OMContract/ContractException.html" title="class in OMContract">ContractException</A></PRE>
<DL>
<DD>Checking if two objects are equal using <code>equals(Object obj)</code>
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>expected</CODE> - expected value<DD><CODE>given</CODE> - given object
<DT><B>Throws:</B>
<DD><CODE><A HREF="../OMContract/ContractException.html" title="class in OMContract">ContractException</A></CODE> - if objects are not equal</DL>
</DD>
</DL>
<HR>

<A NAME="isInInclusiveRange(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable)"><!-- --></A><A NAME="isInInclusiveRange(T, T, T)"><!-- --></A><H3>
isInInclusiveRange</H3>
<PRE>
public &lt;T extends java.lang.Comparable&gt; <A HREF="../OMContract/Requirement.html" title="class in OMContract">Requirement</A> <B>isInInclusiveRange</B>(T&nbsp;minimum,
                                                                       T&nbsp;maximum,
                                                                       T&nbsp;given)
                               throws <A HREF="../OMContract/ContractException.html" title="class in OMContract">ContractException</A></PRE>
<DL>
<DD>Checking if the given Object is in inclusive Range between minimum and maximum
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>minimum</CODE> - Must implement Comparable<DD><CODE>maximum</CODE> - Must implement Comparable<DD><CODE>given</CODE> - Must implement Comparable
<DT><B>Throws:</B>
<DD><CODE><A HREF="../OMContract/ContractException.html" title="class in OMContract">ContractException</A></CODE> - if given object is not Range</DL>
</DD>
</DL>
<HR>

<A NAME="isInExclusiveRange(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable)"><!-- --></A><A NAME="isInExclusiveRange(T, T, T)"><!-- --></A><H3>
isInExclusiveRange</H3>
<PRE>
public &lt;T extends java.lang.Comparable&gt; <A HREF="../OMContract/Requirement.html" title="class in OMContract">Requirement</A> <B>isInExclusiveRange</B>(T&nbsp;minimum,
                                                                       T&nbsp;maximum,
                                                                       T&nbsp;given)
                               throws <A HREF="../OMContract/ContractException.html" title="class in OMContract">ContractException</A></PRE>
<DL>
<DD>Checking if the given Object is in exclusive Range between minimum and maximum
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>minimum</CODE> - Must implement Comparable<DD><CODE>maximum</CODE> - Must implement Comparable<DD><CODE>given</CODE> - Must implement Comparable
<DT><B>Throws:</B>
<DD><CODE><A HREF="../OMContract/ContractException.html" title="class in OMContract">ContractException</A></CODE> - if given object is not Range</DL>
</DD>
</DL>
<HR>

<A NAME="isNotNull(java.lang.Object)"><!-- --></A><H3>
isNotNull</H3>
<PRE>
protected void <B>isNotNull</B>(java.lang.Object&nbsp;obj)
                  throws <A HREF="../OMContract/ContractException.html" title="class in OMContract">ContractException</A></PRE>
<DL>
<DD>Cheking if the given Object is <code>null</code>
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>obj</CODE> - given Object
<DT><B>Throws:</B>
<DD><CODE><A HREF="../OMContract/ContractException.html" title="class in OMContract">ContractException</A></CODE> - if given Object is <code>null</code></DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../OMContract/package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/Requirement.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../OMContract/PreconditionFailedException.html" title="class in OMContract"><B>PREV CLASS</B></A>&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?OMContract/Requirement.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="Requirement.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;CONSTR&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
